//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace PhoneApp.NewsService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="People", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class People : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string PasswordField;
        
        private int RightField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Right {
            get {
                return this.RightField;
            }
            set {
                if ((this.RightField.Equals(value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class News : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> AuthorField;
        
        private string BodyField;
        
        private string SubTitleField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((this.AuthorField.Equals(value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paper", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class Paper : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> AuthorField;
        
        private string BodyField;
        
        private System.Nullable<int> IdField;
        
        private string OverviewField;
        
        private string SubTitleField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((this.AuthorField.Equals(value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overview {
            get {
                return this.OverviewField;
            }
            set {
                if ((object.ReferenceEquals(this.OverviewField, value) != true)) {
                    this.OverviewField = value;
                    this.RaisePropertyChanged("Overview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Commentary", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class Commentary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> AuthorField;
        
        private string ContentField;
        
        private System.Nullable<int> PaperField;
        
        private System.Nullable<int> RatingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((this.AuthorField.Equals(value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Paper {
            get {
                return this.PaperField;
            }
            set {
                if ((this.PaperField.Equals(value) != true)) {
                    this.PaperField = value;
                    this.RaisePropertyChanged("Paper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsService.INewsWCF")]
    public interface INewsWCF {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/createUser", ReplyAction="http://tempuri.org/INewsWCF/createUserResponse")]
        System.IAsyncResult BegincreateUser(string firstname, string lastname, string username, string password, System.AsyncCallback callback, object asyncState);
        
        void EndcreateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/connectUser", ReplyAction="http://tempuri.org/INewsWCF/connectUserResponse")]
        System.IAsyncResult BeginconnectUser(string username, string password, System.AsyncCallback callback, object asyncState);
        
        PhoneApp.NewsService.People EndconnectUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/connectReader", ReplyAction="http://tempuri.org/INewsWCF/connectReaderResponse")]
        System.IAsyncResult BeginconnectReader(string username, string password, System.AsyncCallback callback, object asyncState);
        
        PhoneApp.NewsService.People EndconnectReader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/getNews", ReplyAction="http://tempuri.org/INewsWCF/getNewsResponse")]
        System.IAsyncResult BegingetNews(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> EndgetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/getPapers", ReplyAction="http://tempuri.org/INewsWCF/getPapersResponse")]
        System.IAsyncResult BegingetPapers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> EndgetPapers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/sendComment", ReplyAction="http://tempuri.org/INewsWCF/sendCommentResponse")]
        System.IAsyncResult BeginsendComment(PhoneApp.NewsService.Commentary commentary, PhoneApp.NewsService.People people, PhoneApp.NewsService.Paper paper, System.AsyncCallback callback, object asyncState);
        
        void EndsendComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/getHistoric", ReplyAction="http://tempuri.org/INewsWCF/getHistoricResponse")]
        System.IAsyncResult BegingetHistoric(PhoneApp.NewsService.People user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> EndgetHistoric(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/sendNews", ReplyAction="http://tempuri.org/INewsWCF/sendNewsResponse")]
        System.IAsyncResult BeginsendNews(PhoneApp.NewsService.News news, PhoneApp.NewsService.People people, System.AsyncCallback callback, object asyncState);
        
        void EndsendNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsWCF/sendNewsA", ReplyAction="http://tempuri.org/INewsWCF/sendNewsAResponse")]
        System.IAsyncResult BeginsendNewsA(PhoneApp.NewsService.News news, string author, System.AsyncCallback callback, object asyncState);
        
        void EndsendNewsA(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsWCFChannel : PhoneApp.NewsService.INewsWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class connectUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public connectUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp.NewsService.People Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp.NewsService.People)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class connectReaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public connectReaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp.NewsService.People Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp.NewsService.People)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getPapersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getPapersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getHistoricCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getHistoricCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsWCFClient : System.ServiceModel.ClientBase<PhoneApp.NewsService.INewsWCF>, PhoneApp.NewsService.INewsWCF {
        
        private BeginOperationDelegate onBegincreateUserDelegate;
        
        private EndOperationDelegate onEndcreateUserDelegate;
        
        private System.Threading.SendOrPostCallback oncreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginconnectUserDelegate;
        
        private EndOperationDelegate onEndconnectUserDelegate;
        
        private System.Threading.SendOrPostCallback onconnectUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginconnectReaderDelegate;
        
        private EndOperationDelegate onEndconnectReaderDelegate;
        
        private System.Threading.SendOrPostCallback onconnectReaderCompletedDelegate;
        
        private BeginOperationDelegate onBegingetNewsDelegate;
        
        private EndOperationDelegate onEndgetNewsDelegate;
        
        private System.Threading.SendOrPostCallback ongetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetPapersDelegate;
        
        private EndOperationDelegate onEndgetPapersDelegate;
        
        private System.Threading.SendOrPostCallback ongetPapersCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendCommentDelegate;
        
        private EndOperationDelegate onEndsendCommentDelegate;
        
        private System.Threading.SendOrPostCallback onsendCommentCompletedDelegate;
        
        private BeginOperationDelegate onBegingetHistoricDelegate;
        
        private EndOperationDelegate onEndgetHistoricDelegate;
        
        private System.Threading.SendOrPostCallback ongetHistoricCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendNewsDelegate;
        
        private EndOperationDelegate onEndsendNewsDelegate;
        
        private System.Threading.SendOrPostCallback onsendNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginsendNewsADelegate;
        
        private EndOperationDelegate onEndsendNewsADelegate;
        
        private System.Threading.SendOrPostCallback onsendNewsACompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NewsWCFClient() {
        }
        
        public NewsWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> createUserCompleted;
        
        public event System.EventHandler<connectUserCompletedEventArgs> connectUserCompleted;
        
        public event System.EventHandler<connectReaderCompletedEventArgs> connectReaderCompleted;
        
        public event System.EventHandler<getNewsCompletedEventArgs> getNewsCompleted;
        
        public event System.EventHandler<getPapersCompletedEventArgs> getPapersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> sendCommentCompleted;
        
        public event System.EventHandler<getHistoricCompletedEventArgs> getHistoricCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> sendNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> sendNewsACompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BegincreateUser(string firstname, string lastname, string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegincreateUser(firstname, lastname, username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.NewsService.INewsWCF.EndcreateUser(System.IAsyncResult result) {
            base.Channel.EndcreateUser(result);
        }
        
        private System.IAsyncResult OnBegincreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string firstname = ((string)(inValues[0]));
            string lastname = ((string)(inValues[1]));
            string username = ((string)(inValues[2]));
            string password = ((string)(inValues[3]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BegincreateUser(firstname, lastname, username, password, callback, asyncState);
        }
        
        private object[] OnEndcreateUser(System.IAsyncResult result) {
            ((PhoneApp.NewsService.INewsWCF)(this)).EndcreateUser(result);
            return null;
        }
        
        private void OncreateUserCompleted(object state) {
            if ((this.createUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.createUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void createUserAsync(string firstname, string lastname, string username, string password) {
            this.createUserAsync(firstname, lastname, username, password, null);
        }
        
        public void createUserAsync(string firstname, string lastname, string username, string password, object userState) {
            if ((this.onBegincreateUserDelegate == null)) {
                this.onBegincreateUserDelegate = new BeginOperationDelegate(this.OnBegincreateUser);
            }
            if ((this.onEndcreateUserDelegate == null)) {
                this.onEndcreateUserDelegate = new EndOperationDelegate(this.OnEndcreateUser);
            }
            if ((this.oncreateUserCompletedDelegate == null)) {
                this.oncreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncreateUserCompleted);
            }
            base.InvokeAsync(this.onBegincreateUserDelegate, new object[] {
                        firstname,
                        lastname,
                        username,
                        password}, this.onEndcreateUserDelegate, this.oncreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BeginconnectUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconnectUser(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp.NewsService.People PhoneApp.NewsService.INewsWCF.EndconnectUser(System.IAsyncResult result) {
            return base.Channel.EndconnectUser(result);
        }
        
        private System.IAsyncResult OnBeginconnectUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BeginconnectUser(username, password, callback, asyncState);
        }
        
        private object[] OnEndconnectUser(System.IAsyncResult result) {
            PhoneApp.NewsService.People retVal = ((PhoneApp.NewsService.INewsWCF)(this)).EndconnectUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconnectUserCompleted(object state) {
            if ((this.connectUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.connectUserCompleted(this, new connectUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void connectUserAsync(string username, string password) {
            this.connectUserAsync(username, password, null);
        }
        
        public void connectUserAsync(string username, string password, object userState) {
            if ((this.onBeginconnectUserDelegate == null)) {
                this.onBeginconnectUserDelegate = new BeginOperationDelegate(this.OnBeginconnectUser);
            }
            if ((this.onEndconnectUserDelegate == null)) {
                this.onEndconnectUserDelegate = new EndOperationDelegate(this.OnEndconnectUser);
            }
            if ((this.onconnectUserCompletedDelegate == null)) {
                this.onconnectUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconnectUserCompleted);
            }
            base.InvokeAsync(this.onBeginconnectUserDelegate, new object[] {
                        username,
                        password}, this.onEndconnectUserDelegate, this.onconnectUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BeginconnectReader(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconnectReader(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp.NewsService.People PhoneApp.NewsService.INewsWCF.EndconnectReader(System.IAsyncResult result) {
            return base.Channel.EndconnectReader(result);
        }
        
        private System.IAsyncResult OnBeginconnectReader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BeginconnectReader(username, password, callback, asyncState);
        }
        
        private object[] OnEndconnectReader(System.IAsyncResult result) {
            PhoneApp.NewsService.People retVal = ((PhoneApp.NewsService.INewsWCF)(this)).EndconnectReader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnconnectReaderCompleted(object state) {
            if ((this.connectReaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.connectReaderCompleted(this, new connectReaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void connectReaderAsync(string username, string password) {
            this.connectReaderAsync(username, password, null);
        }
        
        public void connectReaderAsync(string username, string password, object userState) {
            if ((this.onBeginconnectReaderDelegate == null)) {
                this.onBeginconnectReaderDelegate = new BeginOperationDelegate(this.OnBeginconnectReader);
            }
            if ((this.onEndconnectReaderDelegate == null)) {
                this.onEndconnectReaderDelegate = new EndOperationDelegate(this.OnEndconnectReader);
            }
            if ((this.onconnectReaderCompletedDelegate == null)) {
                this.onconnectReaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconnectReaderCompleted);
            }
            base.InvokeAsync(this.onBeginconnectReaderDelegate, new object[] {
                        username,
                        password}, this.onEndconnectReaderDelegate, this.onconnectReaderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BegingetNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> PhoneApp.NewsService.INewsWCF.EndgetNews(System.IAsyncResult result) {
            return base.Channel.EndgetNews(result);
        }
        
        private System.IAsyncResult OnBegingetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneApp.NewsService.INewsWCF)(this)).BegingetNews(callback, asyncState);
        }
        
        private object[] OnEndgetNews(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> retVal = ((PhoneApp.NewsService.INewsWCF)(this)).EndgetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetNewsCompleted(object state) {
            if ((this.getNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getNewsCompleted(this, new getNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getNewsAsync() {
            this.getNewsAsync(null);
        }
        
        public void getNewsAsync(object userState) {
            if ((this.onBegingetNewsDelegate == null)) {
                this.onBegingetNewsDelegate = new BeginOperationDelegate(this.OnBegingetNews);
            }
            if ((this.onEndgetNewsDelegate == null)) {
                this.onEndgetNewsDelegate = new EndOperationDelegate(this.OnEndgetNews);
            }
            if ((this.ongetNewsCompletedDelegate == null)) {
                this.ongetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetNewsCompleted);
            }
            base.InvokeAsync(this.onBegingetNewsDelegate, null, this.onEndgetNewsDelegate, this.ongetNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BegingetPapers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetPapers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> PhoneApp.NewsService.INewsWCF.EndgetPapers(System.IAsyncResult result) {
            return base.Channel.EndgetPapers(result);
        }
        
        private System.IAsyncResult OnBegingetPapers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneApp.NewsService.INewsWCF)(this)).BegingetPapers(callback, asyncState);
        }
        
        private object[] OnEndgetPapers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> retVal = ((PhoneApp.NewsService.INewsWCF)(this)).EndgetPapers(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetPapersCompleted(object state) {
            if ((this.getPapersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getPapersCompleted(this, new getPapersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getPapersAsync() {
            this.getPapersAsync(null);
        }
        
        public void getPapersAsync(object userState) {
            if ((this.onBegingetPapersDelegate == null)) {
                this.onBegingetPapersDelegate = new BeginOperationDelegate(this.OnBegingetPapers);
            }
            if ((this.onEndgetPapersDelegate == null)) {
                this.onEndgetPapersDelegate = new EndOperationDelegate(this.OnEndgetPapers);
            }
            if ((this.ongetPapersCompletedDelegate == null)) {
                this.ongetPapersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetPapersCompleted);
            }
            base.InvokeAsync(this.onBegingetPapersDelegate, null, this.onEndgetPapersDelegate, this.ongetPapersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BeginsendComment(PhoneApp.NewsService.Commentary commentary, PhoneApp.NewsService.People people, PhoneApp.NewsService.Paper paper, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendComment(commentary, people, paper, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.NewsService.INewsWCF.EndsendComment(System.IAsyncResult result) {
            base.Channel.EndsendComment(result);
        }
        
        private System.IAsyncResult OnBeginsendComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.NewsService.Commentary commentary = ((PhoneApp.NewsService.Commentary)(inValues[0]));
            PhoneApp.NewsService.People people = ((PhoneApp.NewsService.People)(inValues[1]));
            PhoneApp.NewsService.Paper paper = ((PhoneApp.NewsService.Paper)(inValues[2]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BeginsendComment(commentary, people, paper, callback, asyncState);
        }
        
        private object[] OnEndsendComment(System.IAsyncResult result) {
            ((PhoneApp.NewsService.INewsWCF)(this)).EndsendComment(result);
            return null;
        }
        
        private void OnsendCommentCompleted(object state) {
            if ((this.sendCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendCommentAsync(PhoneApp.NewsService.Commentary commentary, PhoneApp.NewsService.People people, PhoneApp.NewsService.Paper paper) {
            this.sendCommentAsync(commentary, people, paper, null);
        }
        
        public void sendCommentAsync(PhoneApp.NewsService.Commentary commentary, PhoneApp.NewsService.People people, PhoneApp.NewsService.Paper paper, object userState) {
            if ((this.onBeginsendCommentDelegate == null)) {
                this.onBeginsendCommentDelegate = new BeginOperationDelegate(this.OnBeginsendComment);
            }
            if ((this.onEndsendCommentDelegate == null)) {
                this.onEndsendCommentDelegate = new EndOperationDelegate(this.OnEndsendComment);
            }
            if ((this.onsendCommentCompletedDelegate == null)) {
                this.onsendCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendCommentCompleted);
            }
            base.InvokeAsync(this.onBeginsendCommentDelegate, new object[] {
                        commentary,
                        people,
                        paper}, this.onEndsendCommentDelegate, this.onsendCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BegingetHistoric(PhoneApp.NewsService.People user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetHistoric(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> PhoneApp.NewsService.INewsWCF.EndgetHistoric(System.IAsyncResult result) {
            return base.Channel.EndgetHistoric(result);
        }
        
        private System.IAsyncResult OnBegingetHistoric(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.NewsService.People user = ((PhoneApp.NewsService.People)(inValues[0]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BegingetHistoric(user, callback, asyncState);
        }
        
        private object[] OnEndgetHistoric(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> retVal = ((PhoneApp.NewsService.INewsWCF)(this)).EndgetHistoric(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetHistoricCompleted(object state) {
            if ((this.getHistoricCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getHistoricCompleted(this, new getHistoricCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getHistoricAsync(PhoneApp.NewsService.People user) {
            this.getHistoricAsync(user, null);
        }
        
        public void getHistoricAsync(PhoneApp.NewsService.People user, object userState) {
            if ((this.onBegingetHistoricDelegate == null)) {
                this.onBegingetHistoricDelegate = new BeginOperationDelegate(this.OnBegingetHistoric);
            }
            if ((this.onEndgetHistoricDelegate == null)) {
                this.onEndgetHistoricDelegate = new EndOperationDelegate(this.OnEndgetHistoric);
            }
            if ((this.ongetHistoricCompletedDelegate == null)) {
                this.ongetHistoricCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetHistoricCompleted);
            }
            base.InvokeAsync(this.onBegingetHistoricDelegate, new object[] {
                        user}, this.onEndgetHistoricDelegate, this.ongetHistoricCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BeginsendNews(PhoneApp.NewsService.News news, PhoneApp.NewsService.People people, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendNews(news, people, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.NewsService.INewsWCF.EndsendNews(System.IAsyncResult result) {
            base.Channel.EndsendNews(result);
        }
        
        private System.IAsyncResult OnBeginsendNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.NewsService.News news = ((PhoneApp.NewsService.News)(inValues[0]));
            PhoneApp.NewsService.People people = ((PhoneApp.NewsService.People)(inValues[1]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BeginsendNews(news, people, callback, asyncState);
        }
        
        private object[] OnEndsendNews(System.IAsyncResult result) {
            ((PhoneApp.NewsService.INewsWCF)(this)).EndsendNews(result);
            return null;
        }
        
        private void OnsendNewsCompleted(object state) {
            if ((this.sendNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendNewsAsync(PhoneApp.NewsService.News news, PhoneApp.NewsService.People people) {
            this.sendNewsAsync(news, people, null);
        }
        
        public void sendNewsAsync(PhoneApp.NewsService.News news, PhoneApp.NewsService.People people, object userState) {
            if ((this.onBeginsendNewsDelegate == null)) {
                this.onBeginsendNewsDelegate = new BeginOperationDelegate(this.OnBeginsendNews);
            }
            if ((this.onEndsendNewsDelegate == null)) {
                this.onEndsendNewsDelegate = new EndOperationDelegate(this.OnEndsendNews);
            }
            if ((this.onsendNewsCompletedDelegate == null)) {
                this.onsendNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendNewsCompleted);
            }
            base.InvokeAsync(this.onBeginsendNewsDelegate, new object[] {
                        news,
                        people}, this.onEndsendNewsDelegate, this.onsendNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.NewsService.INewsWCF.BeginsendNewsA(PhoneApp.NewsService.News news, string author, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsendNewsA(news, author, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.NewsService.INewsWCF.EndsendNewsA(System.IAsyncResult result) {
            base.Channel.EndsendNewsA(result);
        }
        
        private System.IAsyncResult OnBeginsendNewsA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.NewsService.News news = ((PhoneApp.NewsService.News)(inValues[0]));
            string author = ((string)(inValues[1]));
            return ((PhoneApp.NewsService.INewsWCF)(this)).BeginsendNewsA(news, author, callback, asyncState);
        }
        
        private object[] OnEndsendNewsA(System.IAsyncResult result) {
            ((PhoneApp.NewsService.INewsWCF)(this)).EndsendNewsA(result);
            return null;
        }
        
        private void OnsendNewsACompleted(object state) {
            if ((this.sendNewsACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sendNewsACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sendNewsAAsync(PhoneApp.NewsService.News news, string author) {
            this.sendNewsAAsync(news, author, null);
        }
        
        public void sendNewsAAsync(PhoneApp.NewsService.News news, string author, object userState) {
            if ((this.onBeginsendNewsADelegate == null)) {
                this.onBeginsendNewsADelegate = new BeginOperationDelegate(this.OnBeginsendNewsA);
            }
            if ((this.onEndsendNewsADelegate == null)) {
                this.onEndsendNewsADelegate = new EndOperationDelegate(this.OnEndsendNewsA);
            }
            if ((this.onsendNewsACompletedDelegate == null)) {
                this.onsendNewsACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsendNewsACompleted);
            }
            base.InvokeAsync(this.onBeginsendNewsADelegate, new object[] {
                        news,
                        author}, this.onEndsendNewsADelegate, this.onsendNewsACompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PhoneApp.NewsService.INewsWCF CreateChannel() {
            return new NewsWCFClientChannel(this);
        }
        
        private class NewsWCFClientChannel : ChannelBase<PhoneApp.NewsService.INewsWCF>, PhoneApp.NewsService.INewsWCF {
            
            public NewsWCFClientChannel(System.ServiceModel.ClientBase<PhoneApp.NewsService.INewsWCF> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegincreateUser(string firstname, string lastname, string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = firstname;
                _args[1] = lastname;
                _args[2] = username;
                _args[3] = password;
                System.IAsyncResult _result = base.BeginInvoke("createUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndcreateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("createUser", _args, result);
            }
            
            public System.IAsyncResult BeginconnectUser(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("connectUser", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp.NewsService.People EndconnectUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp.NewsService.People _result = ((PhoneApp.NewsService.People)(base.EndInvoke("connectUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconnectReader(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("connectReader", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp.NewsService.People EndconnectReader(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp.NewsService.People _result = ((PhoneApp.NewsService.People)(base.EndInvoke("connectReader", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getNews", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> EndgetNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News>)(base.EndInvoke("getNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetPapers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getPapers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> EndgetPapers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.Paper>)(base.EndInvoke("getPapers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginsendComment(PhoneApp.NewsService.Commentary commentary, PhoneApp.NewsService.People people, PhoneApp.NewsService.Paper paper, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = commentary;
                _args[1] = people;
                _args[2] = paper;
                System.IAsyncResult _result = base.BeginInvoke("sendComment", _args, callback, asyncState);
                return _result;
            }
            
            public void EndsendComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("sendComment", _args, result);
            }
            
            public System.IAsyncResult BegingetHistoric(PhoneApp.NewsService.People user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("getHistoric", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> EndgetHistoric(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.NewsService.News>)(base.EndInvoke("getHistoric", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginsendNews(PhoneApp.NewsService.News news, PhoneApp.NewsService.People people, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = news;
                _args[1] = people;
                System.IAsyncResult _result = base.BeginInvoke("sendNews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndsendNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("sendNews", _args, result);
            }
            
            public System.IAsyncResult BeginsendNewsA(PhoneApp.NewsService.News news, string author, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = news;
                _args[1] = author;
                System.IAsyncResult _result = base.BeginInvoke("sendNewsA", _args, callback, asyncState);
                return _result;
            }
            
            public void EndsendNewsA(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("sendNewsA", _args, result);
            }
        }
    }
}
